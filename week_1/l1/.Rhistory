# BE221 Assignment 1
# Submitted by Neeraj Dhandia, 22808
install.packages('IRkernel')
ok
library(BoolNet)
vignette("BoolNet_package_vignette")
getwd()
cd ND
ls
ls
getwd()
# Load the BoolNet package
library(BoolNet)
# Define the network
network <- "
targets, factors
Gene1, Gene3
Gene2, Gene1 or Gene3
Gene3, gene2
"
# Write the network to a file
writeLines(network, con = "network.txt")
# Load the network
net <- loadNetwork("network.txt")
# Define the network
network <- "
targets, factors
Gene1, Gene3
Gene2, Gene1 or Gene3
Gene3, Gene2
"
# Write the network to a file
writeLines(network, con = "network.txt")
# Load the network
net <- loadNetwork("network.txt")
# Define the network
network <- "
targets, factors
Gene1, Gene3
Gene2, Gene1 | Gene2
Gene3, Gene2
"
# Write the network to a file
writeLines(network, con = "network.txt")
# Load the network
net <- loadNetwork("network.txt")
# Simulate the network
states <- generateState(net)
state_table <- getTransitionTable(net)
attractors <- getAttractors(net)
# Print the states
print(attractors)
# Print the states
print(attractors)
attractorsToLaTeX(attractorInfo,
subset,
title = "",
grouping = list(),
plotFixed = TRUE,
onColor = "[gray]{0.9}",
offColor = "[gray]{0.6}",
reverse = FALSE,
file = "attractors.tex")
attractorInfo <- getAttractors(net)
attractorsToLaTeX(attractorInfo,
subset,
title = "",
grouping = list(),
plotFixed = TRUE,
onColor = "[gray]{0.9}",
offColor = "[gray]{0.6}",
reverse = FALSE,
file = "attractors.tex")
# Install and load the BoolNet package
if (!require(BoolNet)) {
install.packages("BoolNet")
library(BoolNet)
}
# Define the Boolean network with the correct header
network <- "
targets, factors
A, C
B, A | C
C, B
"
# Write the network rules to a file
writeLines(network, "network.txt")
# Load the network from the file
net <- loadNetwork("network.txt")
gc()
gc()
gc()
# Install and load the BoolNet package
if (!require(BoolNet)) {
install.packages("BoolNet")
library(BoolNet)
}
# Define the Boolean network with the correct header
network <- "
targets, factors
A, C
B, A | C
C, B
"
# Write the network rules to a file
writeLines(network, "network.txt")
# Load the network from the file
net <- loadNetwork("network.txt")
# Find the attractors of the network
attractors <- getAttractors(net)
# Print the attractors
print(attractors)
# Get the state transition table
transitionTable <- getTransitionTable(attractors)
# Print the state transition table
print(transitionTable)
# Plot the state transition graph
plotStateGraph(attractors,layout = layout_with_fr, vertex.size = 4, vertex.label.dist = 0.5, vertex.color = "red", edge.arrow.size = 0.5, main = "State Transition Graph")
?plotStateGraph
# Plot the state transition graph
plotStateGraph(attractors,layout = layout.kamada.kawai, vertex.size = 4, vertex.label.dist = 0.5, vertex.color = "red", edge.arrow.size = 0.5, main = "State Transition Graph")
# Plot the state transition graph
plotStateGraph(attractors,layout = layout.fruchterman.reingold, vertex.size = 4, vertex.label.dist = 0.5, vertex.color = "red", edge.arrow.size = 0.5, main = "State Transition Graph")
# Plot the state transition graph
plotStateGraph(attractors, main = "State Transition Graph", layout = layout.fruchterman.reingold, vertex.size = 4, vertex.label.dist = 0.5, vertex.color = "red", edge.arrow.size = 0.5)
# Plot the state transition graph
plotStateGraph(attractors, main = "State Transition Graph", layout = layout_with_kk, vertex.size = 4, vertex.label.dist = 0.5, vertex.color = "red", edge.arrow.size = 0.5)
?plotStateGraph
# plotNetworkWiring(net,layout = "circle", vertex.label.cex = 1.5, vertex.size = 30, edge.width = 2, edge.label.cex = 1.5, edge.label.color = "black", vertex.label.color = "black", vertex.color = "lightblue", edge.color = "black", main = "Network Wiring Diagram")
plotNetworkWiring(net,layout = layout.fruchterman.reingold,plotIt = TRUE, main = "Network Wiring Diagram")
plot(attractors, layout=layout_with_fr, vertex.size=4,
vertex.label.dist=0.5, vertex.color="red", edge.arrow.size=0.5)
ls
getwd()
setwd("ND/BE_MT/no_backup/courses/cs50r/")
setwd("week_1/l1/")
list.files()
file.edit("count.R")
file.edit("hello.R")
file.edit("tabulate.R")
list.files()
View("total.csv")
edit.file("voters.R")
file.edit("voters.R")
